# Generated by Django 4.2.10 on 2024-08-01 14:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("email_address", models.EmailField(max_length=255, unique=True)),
                ("phone_number", models.CharField(max_length=50)),
                ("password", models.CharField(max_length=100)),
                (
                    "user_type",
                    models.CharField(
                        choices=[("Buyer", "Buyer"), ("Realtor", "Realtor")],
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateField(auto_now_add=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SearchFilter",
            fields=[
                ("filter_id", models.AutoField(primary_key=True, serialize=False)),
                ("location", models.CharField(max_length=150)),
                ("price_min", models.FloatField()),
                ("price_max", models.FloatField()),
                ("property_type", models.CharField(max_length=50)),
                ("bedrooms", models.IntegerField()),
                ("bathrooms", models.IntegerField()),
                ("area_min", models.FloatField()),
                ("area_max", models.FloatField()),
                ("created_at", models.DateField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                ("property_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=150)),
                ("description", models.CharField(max_length=255)),
                ("price", models.FloatField()),
                ("location", models.CharField(max_length=255)),
                ("property_type", models.CharField(max_length=100)),
                ("bedrooms", models.IntegerField()),
                ("bathrooms", models.IntegerField()),
                ("area", models.FloatField()),
                ("listed_at", models.DateField(auto_now_add=True)),
                (
                    "primary_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="property_photos/"
                    ),
                ),
                (
                    "realtor",
                    models.ForeignKey(
                        limit_choices_to={"user_type": "Realtor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                ("profile_id", models.AutoField(primary_key=True, serialize=False)),
                ("bio", models.TextField()),
                ("address", models.CharField(max_length=255)),
                ("preferences", models.TextField()),
                ("updated_at", models.DateField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                ("message_id", models.AutoField(primary_key=True, serialize=False)),
                ("content", models.TextField()),
                ("sent_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "receiver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                ("feedback_id", models.AutoField(primary_key=True, serialize=False)),
                ("content", models.TextField()),
                ("created_at", models.DateField(auto_now_add=True)),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="property.property",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChatRoom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "buyer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="buyer_chats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="property.property",
                    ),
                ),
                (
                    "realtor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="realtor_chats",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
